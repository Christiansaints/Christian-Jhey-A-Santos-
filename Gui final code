import tkinter as tk
from tkinter import ttk, filedialog, messagebox
import datetime
from winsound import PlaySound, SND_FILENAME, SND_ASYNC

class AlarmClockApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Alarm Clock")

        self.alarms = []  # List to store alarms
        self.music_file = ""

        # Frame for Alarm Time Entry
        alarm_frame = ttk.Frame(root, padding="20")
        alarm_frame.pack(pady=(20, 10))

        ttk.Label(alarm_frame, text="Set Alarm Time (HH:MM am/pm):", font=("Helvetica", 14)).pack(side="left", padx=(0, 10))
        self.alarmHour = ttk.Entry(alarm_frame, width=3)
        self.alarmHour.pack(side="left")
        ttk.Label(alarm_frame, text=":", font=("Helvetica", 14)).pack(side="left")
        self.alarmMin = ttk.Entry(alarm_frame, width=3)
        self.alarmMin.pack(side="left")
        self.alarmAm = ttk.Combobox(alarm_frame, values=["am", "pm"])
        self.alarmAm.pack(side="left")
        self.alarmAm.set("am")

        # Button to Select Music File
        ttk.Button(alarm_frame, text="Select Music", command=self.select_music).pack(side="left", padx=10)

        # Set Alarm Button
        ttk.Button(root, text="Set Alarm", command=self.add_alarm).pack(pady=10)

        # Listbox to display alarms
        self.alarm_listbox = tk.Listbox(root, width=50, height=10)
        self.alarm_listbox.pack(pady=(0, 20))

        # Button to delete selected alarm
        ttk.Button(root, text="Delete Selected Alarm", command=self.delete_alarm).pack()

        # Start checking for alarms
        self.check_alarms()

    def select_music(self):
        self.music_file = filedialog.askopenfilename(filetypes=(("MP3 files", ".mp3"), ("All files", ".*")))

    def add_alarm(self):
        hour = self.alarmHour.get()
        minute = self.alarmMin.get()
        am_pm = self.alarmAm.get()

        try:
            hour = int(hour)
            minute = int(minute)

            if am_pm == "pm" and hour != 12:
                hour += 12
            elif am_pm == "am" and hour == 12:
                hour = 0

            if 0 <= hour <= 23 and 0 <= minute <= 59:
                alarm_time = datetime.time(hour, minute)
                self.alarms.append(alarm_time)
                self.update_alarm_listbox()
            else:
                messagebox.showwarning("Invalid Time", "Please enter a valid time (HH:MM am/pm).")
        except ValueError:
            messagebox.showwarning("Invalid Input", "Please enter valid integer values for hour and minute.")

    def update_alarm_listbox(self):
        self.alarm_listbox.delete(0, tk.END)
        for i, alarm in enumerate(self.alarms):
            self.alarm_listbox.insert(tk.END, f"Alarm {i+1}: {alarm.strftime('%I:%M %p')}")

    def delete_alarm(self):
        selected_indices = self.alarm_listbox.curselection()
        if selected_indices:
            index = selected_indices[0]
            del self.alarms[index]
            self.update_alarm_listbox()

    def check_alarms(self):
        def check():
            now = datetime.datetime.now().time()
            for alarm in self.alarms:
                if now.hour == alarm.hour and now.minute == alarm.minute:
                    messagebox.showinfo("Alarm", "Alarm! Playing sound...")
                    if self.music_file:
                        PlaySound(self.music_file, SND_FILENAME | SND_ASYNC)
                    else:
                        PlaySound("SystemHand", SND_ASYNC)
                    break
            self.root.after(10000, check)  # Check alarms every 10 seconds

        check()

# Create the main application window
root = tk.Tk()
root.geometry("600x400")

# Create an instance of the AlarmClockApp
app = AlarmClockApp(root)

# Start the tkinter main event loop
root.mainloop()
